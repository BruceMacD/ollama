name: Release

# on:
#   release:
#     types: [published]
on:
  push:
    branches:
      - main

jobs:
  cuda12-build:
    runs-on: ubuntu-20.04
    steps:
      - uses: jimver/cuda-toolkit@v0.2.11
        with:
          cuda: '12.1.0'
          method: network
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup Go environment
        uses: actions/setup-go@v4
        with:
          go-version: 1.21
      - name: Install Linux build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake
          nvcc --version
      - name: Generate CUDA 12 runners
        run: |
          go generate ./...
      - name: Zip and upload CUDA 12 output
        run: |
          zip -r cuda-12 ./llm/llama.cpp
      - uses: actions/upload-artifact@v2
        with:
          name: cuda-12
          path: cuda-12

  cuda11-build:
    runs-on: ubuntu-20.04
    steps:
      - uses: jimver/cuda-toolkit@v0.2.11
        with:
          cuda: '11.7.0'
          method: network
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup Go environment
        uses: actions/setup-go@v4
        with:
          go-version: 1.21
      - name: Install Linux build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake
          nvcc --version
      - name: Generate CUDA 11 runners
        run: |
          go generate ./...
      - name: Zip and upload CUDA 11 output
        run: |
          zip -r cuda-11 ./llm/llama.cpp
      - uses: actions/upload-artifact@v2
        with:
          name: cuda-11
          path: cuda-11

  # go-build:
  #   needs: [cuda12-build, cuda11-build]
  #   runs-on: ubuntu-20.04
  #   steps:
  #     # Download and unzip CUDA 12 output
  #     - name: Download CUDA 12 output
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: cuda-12.zip
  #     - run: unzip cuda-12.zip -d ./llama.cpp/ggml/build/cuda-12/bin

  #     # Download and unzip CUDA 11 output
  #     - name: Download CUDA 11 output
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: cuda-11.zip
  #     - run: unzip cuda-11-output.zip -d ./llama.cpp/ggml/build/cuda-11/bin

  #     - name: Checkout Code
  #       uses: actions/checkout@v3
  #     - name: Setup Go environment
  #       uses: actions/setup-go@v4
  #       with:
  #         go-version: 1.21

  #     - name: Move outputs and run go build
  #       run: |
  #         # Move outputs from previous jobs into a directory
  #         mkdir output_directory
  #         mv output_from_cuda12 output_directory/
  #         mv output_from_cuda11 output_directory/
  #         # Run go build
  #         go generate ./...
  #         go build -o ollama
  #       env:
  #         GOFLAGS: >-
  #           '-ldflags=-w -s
  #             "-X=github.com/brucemacd/ollama/version.Version=${{ github.ref_name }}"

  #     - name: Upload build artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: ollama-amd64
  #         path: ollama-amd64
